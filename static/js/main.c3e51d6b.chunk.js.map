{"version":3,"sources":["components/MatchedMedia.tsx","components/ReachMedia.tsx","components/MatchCard.tsx","components/AutoMatchLogs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","media","height","width","borderRadius","MatchedMedia","classes","Button","color","className","src","alt","extraMedia","margin","centered","display","justifyContent","mediaLink","SimpleDialog","props","onClose","open","Dialog","aria-labelledby","DialogTitle","id","Divider","List","ReachMedia","React","useState","setOpen","onClick","root","maxWidth","mediaRow","MatchCard","Card","CardContent","Typography","gutterBottom","align","variant","component","CardActions","Link","href","rel","target","size","directions","position","right","bottom","HtmlTooltip","withStyles","tooltip","backgroundColor","fontSize","typography","pxToRem","border","Tooltip","AutoMatchLogs","CssBaseline","AppBar","elevation","Toolbar","Box","flexGrow","Autocomplete","options","activations","getOptionLabel","option","campaign","activation","style","renderInput","params","TextField","label","padding","Grid","container","spacing","direction","item","xs","sm","md","lg","interactive","title","placement","Fab","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3e51d6b.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    media: {\n      height: 130,\n      width: 130,\n      borderRadius: 4,\n    },\n  })\n);\n\nconst matchedMediaLink =\n  \"https://scontent-iad3-1.cdninstagram.com/v/t51.29350-15/106591964_673331216727006_8449497931365452680_n.jpg?_nc_cat=104&_nc_sid=8ae9d6&_nc_ohc=gBcFbLV3tjsAX8nqDLX&_nc_ht=scontent-iad3-1.cdninstagram.com&oh=be2f84af894a9f456e2b0b656b90e1cb&oe=5F65FC35\";\n\nexport default function MatchedMedia() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button color=\"secondary\">\n        <img className={classes.media} src={matchedMediaLink} alt=\"\" />\n      </Button>\n    </>\n  );\n}\n","import { Button, Dialog, DialogTitle, Divider, List } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    media: {\n      height: 130,\n      width: 130,\n      borderRadius: 4,\n    },\n    extraMedia: {\n      height: 100,\n      width: 100,\n      borderRadius: 4,\n      margin: 1,\n    },\n    centered: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nconst mediaLink =\n  \"https://scontent-iad3-1.cdninstagram.com/v/t51.29350-15/106591964_673331216727006_8449497931365452680_n.jpg?_nc_cat=104&_nc_sid=8ae9d6&_nc_ohc=gBcFbLV3tjsAX8nqDLX&_nc_ht=scontent-iad3-1.cdninstagram.com&oh=be2f84af894a9f456e2b0b656b90e1cb&oe=5F65FC35\";\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nfunction SimpleDialog(props: SimpleDialogProps) {\n  const classes = useStyles();\n  const { onClose, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle className={classes.centered} id=\"simple-dialog-title\">\n        Other medias in post.\n      </DialogTitle>\n      <Divider></Divider>\n      <List>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n        <Button>\n          <img className={classes.extraMedia} src={mediaLink} alt=\"\" />\n        </Button>\n      </List>\n    </Dialog>\n  );\n}\n\nexport default function ReachMedia() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const mediaLink =\n    \"https://reach-assets.storage.googleapis.com/system/dragonfly/2020/07/13/23_21_15_877_dragonfly20200713-24842-1p4s49k.png\";\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={handleOpen}>\n        <img className={classes.media} src={mediaLink} alt=\"\" />\n      </Button>\n      <SimpleDialog open={open} onClose={handleClose} />\n    </>\n  );\n}\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Link,\n  List,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport MatchedMedia from \"./MatchedMedia\";\nimport ReachMedia from \"./ReachMedia\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  mediaRow: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\nexport default function MatchCard() {\n  const classes = useStyles();\n\n  const campaignName = \"TurboTax Latino 2\";\n  const activationName = \"IG Feed\";\n  const confidence = \"98.76 %\";\n\n  return (\n    <Card className={classes.root}>\n      <List>\n        <ReachMedia />\n        <MatchedMedia />\n      </List>\n      <Divider />\n      <CardContent>\n        <Typography gutterBottom align=\"left\" variant=\"h5\" component=\"h2\">\n          {campaignName}\n        </Typography>\n        <Typography\n          align=\"left\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Activation : {activationName}\n          <br />\n          Confidence : {confidence}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link\n          href=\"https://theamplify-reachbrands.theamplify.com/albums/18169?media_id=24378\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          <Button size=\"medium\" color=\"primary\">\n            Goto Media Page\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n","import {\n  AppBar,\n  Box,\n  CssBaseline,\n  Divider,\n  Fab,\n  Grid,\n  makeStyles,\n  TextField,\n  Theme,\n  Toolbar,\n  Tooltip,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React from \"react\";\nimport MatchCard from \"./MatchCard\";\n\nconst useStyles = makeStyles({\n  directions: {\n    position: \"fixed\",\n    right: 12,\n    bottom: 12,\n  },\n});\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#fff\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nconst directions = (\n  <>\n    <h4>What can I find here ?</h4>\n    <p>All medias that were auto-matched in past 24 hours.</p>\n    <Divider />\n    <h4>Where can I find details ?</h4>\n    <p>Clicking on either of medias will show hidden details.</p>\n    <Divider />\n    <h4>How to correct wrong matches ?</h4>\n    <p>\n      Clicking on \"GOTO MEDIA PAGE\" button seeks your confirmation and then you\n      can proceed for manually matching.\n    </p>\n  </>\n);\n\nexport default function AutoMatchLogs() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"fixed\" elevation={0} color={\"default\"}>\n        <Toolbar>\n          <Typography variant=\"h5\" color={\"primary\"}>\n            AutoMatch\n          </Typography>\n          <Box flexGrow={1} />\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={activations}\n            size={\"small\"}\n            getOptionLabel={(option) =>\n              option.campaign + \" : \" + option.activation\n            }\n            style={{ width: 600 }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Find By Activation/Campaign\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <Box padding={2}>\n        <Grid container spacing={3} direction={\"row\"}>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <MatchCard />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <MatchCard />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <MatchCard />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <MatchCard />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4} lg={3}>\n            <MatchCard />\n          </Grid>\n        </Grid>\n      </Box>\n      <HtmlTooltip interactive title={directions} placement=\"top\">\n        <Fab className={classes.directions} color=\"primary\" variant=\"extended\">\n          Directions ?\n        </Fab>\n      </HtmlTooltip>\n    </>\n  );\n}\n\nconst activations = [\n  { \"activation\": \"Demo Youtube Story\", \"campaign\": \"TestCampaign\" },\n  { \"activation\": \"PR Activation Tiktok1\", \"campaign\": \"PR Test Campaign1\" },\n  { \"activation\": \"youtubeStory\", \"campaign\": \"Test3AprilCamp\" },\n  {\n    \"activation\": \"Building Forever August Activation 9 IG Posts\",\n    \"campaign\": \"De Beers Group 2020\",\n  },\n  {\n    \"activation\": \"Building Forever August Activation 9 IG Stories\",\n    \"campaign\": \"De Beers Group 2020\",\n  },\n  { \"activation\": \"LOUM Activation 1 - IG Post\", \"campaign\": \"LOUM\" },\n  { \"activation\": \"LOUM Activation 1 - IG Stories\", \"campaign\": \"LOUM\" },\n  {\n    \"activation\": \"Dove Canada Activation 4: NDD Post\",\n    \"campaign\": \"Dove Canada\",\n  },\n  {\n    \"activation\": \"Dove Canada Activation 4: NDD Stories\",\n    \"campaign\": \"Dove Canada\",\n  },\n  {\n    \"activation\": \"Wash Day Live (YT Post) - Dawn Phase 1\",\n    \"campaign\": \"Dove Hair 2020\",\n  },\n];\n","import React from \"react\";\nimport \"./App.css\";\nimport AutoMatchLogs from \"./components/AutoMatchLogs\";\n\nfunction App() {\n\n\treturn <div className=\"App\">\n\t\t<AutoMatchLogs/>\n\t</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}